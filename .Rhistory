coauthor_href <- xml2::xml_attr(coauthors[subset_coauthors], "href")
coauthors <- xml2::xml_text(coauthors)[subset_coauthors]
# If the person has no coauthors, return empty
if (length(coauthor_href) == 0) {
coauthors <- ""
coauthor_href <- ""
}
data.frame(
author = author_name,
coauthors = coauthors,
)
)
}
list_coauthors <- function(url, n_coauthors) {
if (scholar_id == "") {
return(
data.frame(author = character(),
href = character(),
coauthors = character(),
coauthors_href = character())
)
}
resp <- get_resp(url, 5)
google_scholar <- httr::content(resp)
author_name <-
xml2::xml_text(
xml2::xml_find_all(google_scholar,
xpath = "//div[@id = 'gsc_prf_in']")
)
# Do no grab the text of the node yet because I need to grab the
# href below.
coauthors <- xml2::xml_find_all(google_scholar,
xpath = "//a[@tabindex = '-1']")
subset_coauthors <- if (n_coauthors > length(coauthors)) TRUE else seq_len(n_coauthors)
coauthor_href <- xml2::xml_attr(coauthors[subset_coauthors], "href")
coauthors <- xml2::xml_text(coauthors)[subset_coauthors]
# If the person has no coauthors, return empty
if (length(coauthor_href) == 0) {
coauthors <- ""
coauthor_href <- ""
}
data.frame(
author = author_name,
coauthors = coauthors,
)
)
}
list_coauthors <- function(url, n_coauthors) {
if (scholar_id == "") {
return(
data.frame(author = character(),
href = character(),
coauthors = character(),
coauthors_href = character())
)
}
resp <- get_resp(url, 5)
google_scholar <- httr::content(resp)
author_name <-
xml2::xml_text(
xml2::xml_find_all(google_scholar,
xpath = "//div[@id = 'gsc_prf_in']")
)
# Do no grab the text of the node yet because I need to grab the
# href below.
coauthors <- xml2::xml_find_all(google_scholar,
xpath = "//a[@tabindex = '-1']")
subset_coauthors <- if (n_coauthors > length(coauthors)) TRUE else seq_len(n_coauthors)
coauthor_href <- xml2::xml_attr(coauthors[subset_coauthors], "href")
coauthors <- xml2::xml_text(coauthors)[subset_coauthors]
# If the person has no coauthors, return empty
if (length(coauthor_href) == 0) {
coauthors <- ""
coauthor_href <- ""
}
data.frame(
author = author_name,
coauthors = coauthors,
)
}
clean_network <- function(network, n_coauthors) {
purrr::reduce(
purrr::transpose(
purrr::map(network, purrr::safely(get_coauthors), n_coauth = n_coauthors))$result,
rbind)
}
id <- "amYIKXQAAAAJ"
stopifnot(is.numeric(n_deep), length(n_deep) >= 1, n_deep != 0)
stopifnot(is.numeric(n_coauthors), length(n_coauthors) >= 1, n_coauthors != 0)
id <- tidy_id(id)
url_template <- "http://scholar.google.com/citations?hl=en&user=%s"
url <- sprintf(url_template, id)
all_coauthors <- list_coauthors(url, n_coauthors)
list_coauthors <- function(url, n_coauthors) {
if (url == "") {
return(
data.frame(author = character(),
href = character(),
coauthors = character(),
coauthors_href = character())
)
}
resp <- get_resp(url, 5)
google_scholar <- httr::content(resp)
author_name <-
xml2::xml_text(
xml2::xml_find_all(google_scholar,
xpath = "//div[@id = 'gsc_prf_in']")
)
# Do no grab the text of the node yet because I need to grab the
# href below.
coauthors <- xml2::xml_find_all(google_scholar,
xpath = "//a[@tabindex = '-1']")
subset_coauthors <- if (n_coauthors > length(coauthors)) TRUE else seq_len(n_coauthors)
coauthor_href <- xml2::xml_attr(coauthors[subset_coauthors], "href")
coauthors <- xml2::xml_text(coauthors)[subset_coauthors]
# If the person has no coauthors, return empty
if (length(coauthor_href) == 0) {
coauthors <- ""
coauthor_href <- ""
}
data.frame(
author = author_name,
coauthors = coauthors,
)
}
all_coauthors <- list_coauthors(url, n_coauthors)
devtools::load_all()
devtools::load_all()
devtools::load_all()
id <- "amYIKXQAAAAJ"
stopifnot(is.numeric(n_deep), length(n_deep) >= 1, n_deep != 0)
stopifnot(is.numeric(n_coauthors), length(n_coauthors) >= 1, n_coauthors != 0)
id <- tidy_id(id)
url_template <- "http://scholar.google.com/citations?hl=en&user=%s"
url <- sprintf(url_template, id)
all_coauthors <- list_coauthors(url, n_coauthors)
n_deep = 1
n_coauthors = 5
id <- "amYIKXQAAAAJ"
stopifnot(is.numeric(n_deep), length(n_deep) >= 1, n_deep != 0)
stopifnot(is.numeric(n_coauthors), length(n_coauthors) >= 1, n_coauthors != 0)
id <- tidy_id(id)
url_template <- "http://scholar.google.com/citations?hl=en&user=%s"
url <- sprintf(url_template, id)
all_coauthors <- list_coauthors(url, n_coauthors)
all_coauthors
empty_network <- replicate(n_deep, list())
for (i in seq_len(n_deep)) {
if (i == 1)  {
empty_network[[i]] <- clean_network(all_coauthors$coauthors_href, n_coauthors)
} else {
empty_network[[i]] <- clean_network(empty_network[[i - 1]]$coauthors_href, n_coauthors)
}
}
n_deep
url
if (url == "") {
return(
data.frame(author = character(),
href = character(),
coauthors = character(),
coauthors_href = character()
)
)
}
resp <- get_resp(url, 5)
google_scholar <- httr::content(resp)
author_name <-
xml2::xml_text(
xml2::xml_find_all(google_scholar,
xpath = "//div[@id = 'gsc_prf_in']")
)
author_name
coauthors <- xml2::xml_find_all(google_scholar,
xpath = "//a[@tabindex = '-1']")
subset_coauthors <- if (n_coauthors > length(coauthors)) TRUE else seq_len(n_coauthors)
coauthor_href <- xml2::xml_attr(coauthors[subset_coauthors], "href")
coauthors <- xml2::xml_text(coauthors)[subset_coauthors]
coauthor_href
url
id <- "amYIKXQAAAAJ"
stopifnot(is.numeric(n_deep), length(n_deep) >= 1, n_deep != 0)
stopifnot(is.numeric(n_coauthors), length(n_coauthors) >= 1, n_coauthors != 0)
url <- compose_url(id)
all_coauthors <- list_coauthors(url, n_coauthors)
devtools::load_all()
id <- "amYIKXQAAAAJ"
stopifnot(is.numeric(n_deep), length(n_deep) >= 1, n_deep != 0)
stopifnot(is.numeric(n_coauthors), length(n_coauthors) >= 1, n_coauthors != 0)
url <- compose_url(id)
n_deep = 1
n_coauthors = 5
id <- "amYIKXQAAAAJ"
stopifnot(is.numeric(n_deep), length(n_deep) >= 1, n_deep != 0)
stopifnot(is.numeric(n_coauthors), length(n_coauthors) >= 1, n_coauthors != 0)
url <- compose_url(id)
all_coauthors <- list_coauthors(url, n_coauthors)
all_coauthors
list_coauthors <- function(url, n_coauthors) {
if (url == "") {
return(
data.frame(author = character(),
author_href = character(),
coauthors = character(),
coauthors_href = character()
)
)
}
resp <- get_resp(url, 5)
google_scholar <- httr::content(resp)
author_name <-
xml2::xml_text(
xml2::xml_find_all(google_scholar,
xpath = "//div[@id = 'gsc_prf_in']")
)
# Do no grab the text of the node yet because I need to grab the
# href below.
coauthors <- xml2::xml_find_all(google_scholar,
xpath = "//a[@tabindex = '-1']")
subset_coauthors <- if (n_coauthors > length(coauthors)) TRUE else seq_len(n_coauthors)
coauthor_href <- xml2::xml_attr(coauthors[subset_coauthors], "href")
coauthors <- xml2::xml_text(coauthors)[subset_coauthors]
# If the person has no coauthors, return empty
if (length(coauthor_href) == 0) {
coauthors <- ""
coauthor_href <- ""
}
data.frame(
author = author_name,
author_href = url
coauthors = coauthors,
coauthors_href = coauthor_ref
)
}
data.frame(
author = author_name,
author_href = url,
coauthors = coauthors,
coauthors_href = coauthor_ref
)
list_coauthors <- function(url, n_coauthors) {
if (url == "") {
return(
data.frame(author = character(),
author_href = character(),
coauthors = character(),
coauthors_href = character()
)
)
}
resp <- get_resp(url, 5)
google_scholar <- httr::content(resp)
author_name <-
xml2::xml_text(
xml2::xml_find_all(google_scholar,
xpath = "//div[@id = 'gsc_prf_in']")
)
# Do no grab the text of the node yet because I need to grab the
# href below.
coauthors <- xml2::xml_find_all(google_scholar,
xpath = "//a[@tabindex = '-1']")
subset_coauthors <- if (n_coauthors > length(coauthors)) TRUE else seq_len(n_coauthors)
coauthor_href <- xml2::xml_attr(coauthors[subset_coauthors], "href")
coauthors <- xml2::xml_text(coauthors)[subset_coauthors]
# If the person has no coauthors, return empty
if (length(coauthor_href) == 0) {
coauthors <- ""
coauthor_href <- ""
}
data.frame(
author = author_name,
author_href = url,
coauthors = coauthors,
coauthors_href = coauthor_ref
)
}
url <- compose_url(id)
all_coauthors <- list_coauthors(url, n_coauthors)
list_coauthors <- function(url, n_coauthors) {
if (url == "") {
return(
data.frame(author = character(),
author_href = character(),
coauthors = character(),
coauthors_href = character()
)
)
}
resp <- get_resp(url, 5)
google_scholar <- httr::content(resp)
author_name <-
xml2::xml_text(
xml2::xml_find_all(google_scholar,
xpath = "//div[@id = 'gsc_prf_in']")
)
# Do no grab the text of the node yet because I need to grab the
# href below.
coauthors <- xml2::xml_find_all(google_scholar,
xpath = "//a[@tabindex = '-1']")
subset_coauthors <- if (n_coauthors > length(coauthors)) TRUE else seq_len(n_coauthors)
coauthor_href <- xml2::xml_attr(coauthors[subset_coauthors], "href")
coauthors <- xml2::xml_text(coauthors)[subset_coauthors]
# If the person has no coauthors, return empty
if (length(coauthor_href) == 0) {
coauthors <- ""
coauthor_href <- ""
}
data.frame(
author = author_name,
author_href = url,
coauthors = coauthors,
coauthors_href = coauthor_href
)
}
url <- compose_url(id)
all_coauthors <- list_coauthors(url, n_coauthors)
all_coauthors
url
str_extract(url, "user=[a-zA-z]{1,}=")
str_extract(url, "user=[a-zA-z]{1,}=")
stringr::str_extract(url, "user=[a-zA-z]{1,}=")
stringr::str_view_all(url, "user=[a-zA-z]{1,}=")
stringr::str_view_all(url, "user\\=[a-zA-z]{1,}=")
stringr::str_view_all(url, "user\\=[a-zA-z]{1,}\\=")
stringr::str_view_all(url, "user")
stringr::str_view_all(url, "user=")
stringr::str_view_all(url, "user=[a-zA-z]")
stringr::str_view_all(url, "user=.{1,}")
stringr::str_view_all(url, "user=.{1,}=")
stringr::str_view_all(url, "user=.{1,}")
stringr::str_view_all"(/citations?user=nMP0iF4AAAAJ&hl=en&oe=ASCII", "user=.{1,}")
stringr::str_view_all("/citations?user=nMP0iF4AAAAJ&hl=en&oe=ASCII", "user=.{1,}")
stringr::str_view_all("/citations?user=nMP0iF4AAAAJ&hl=en&oe=ASCII", "user=.{1,}=")
stringr::str_view_all("/citations?user=nMP0iF4AAAAJ&hl=en&oe=ASCII", "user=(.{1,})=")
stringr::str_view_all("/citations?user=nMP0iF4AAAAJ&hl=en&oe=ASCII", "user=(.{1,})=\\1")
stringr::str_view_all("/citations?user=nMP0iF4AAAAJ&hl=en&oe=ASCII", "[^user]")
stringr::str_view_all("/citations?user=nMP0iF4AAAAJ&hl=en&oe=ASCII", "[^user]=")
stringr::str_view_all("/citations?user=nMP0iF4AAAAJ&hl=en&oe=ASCII", "[^user]=.+=")
stringr::str_view_all("/citations?user=nMP0iF4AAAAJ&hl=en&oe=ASCII", "[user]=.+=")
stringr::str_view_all("/citations?user=nMP0iF4AAAAJ&hl=en&oe=ASCII", "(?<=user=)[^=]*")
stringr::str_view_all(url, "(?<=user=)[^=]*")
stringr::str_view_all("/citations?user=nMP0iF4AAAAJ&hl=en&oe=ASCII", "(?<=user=)*[^=]")
stringr::str_view_all("/citations?user=nMP0iF4AAAAJ&hl=en&oe=ASCII", "(?<=user=)[^=]*")
stringr::str_view_all("/citations?user=nMP0iF4AAAAJ&hl=en&oe=ASCII", "(?user=)[^=]*")
stringr::str_view_all("/citations?user=nMP0iF4AAAAJ&hl=en&oe=ASCII", "(user=)[^=]*")
stringr::str_view_all("/citations?user=nMP0iF4AAAAJ&hl=en&oe=ASCII", "([^user=])[^=]*")
stringr::str_view_all("/citations?user=nMP0iF4AAAAJ&hl=en&oe=ASCII", "(^user=)[^=]*")
stringr::str_view_all("/citations?user=nMP0iF4AAAAJ&hl=en&oe=ASCII", "(user=)[^=]*")
stringr::str_view_all("/citations?user=nMP0iF4AAAAJ&hl=en&oe=ASCII", "(?user=)[^=]*")
stringr::str_view_all("/citations?user=nMP0iF4AAAAJ&hl=en&oe=ASCII", "(>=user=)[^=]*")
stringr::str_view_all("/citations?user=nMP0iF4AAAAJ&hl=en&oe=ASCII", "(?>=user=)[^=]*")
stringr::str_view_all("/citations?user=nMP0iF4AAAAJ&hl=en&oe=ASCII", "(=>user=)[^=]*")
stringr::str_view_all("/citations?user=nMP0iF4AAAAJ&hl=en&oe=ASCII", "(?=>user=)[^=]*")
stringr::str_view_all("/citations?user=nMP0iF4AAAAJ&hl=en&oe=ASCII", "(?<=user=)[^=]*")
grab_id <- function(url) {
stringr::str_extract(url, "(?<=user=)[^=]*")
}
devtools::load_all()
id <- "amYIKXQAAAAJ"
stopifnot(is.numeric(n_deep), length(n_deep) >= 1, n_deep != 0)
stopifnot(is.numeric(n_coauthors), length(n_coauthors) >= 1, n_coauthors != 0)
url <- compose_url(id)
all_coauthors <- list_coauthors(url, n_coauthors)
all_coauthors
list_coauthors <- function(url, n_coauthors) {
if (url == "") {
return(
data.frame(author = character(),
author_href = character(),
coauthors = character(),
coauthors_href = character()
)
)
}
resp <- get_resp(url, 5)
google_scholar <- httr::content(resp)
author_name <-
xml2::xml_text(
xml2::xml_find_all(google_scholar,
xpath = "//div[@id = 'gsc_prf_in']")
)
# Do no grab the text of the node yet because I need to grab the
# href below.
coauthors <- xml2::xml_find_all(google_scholar,
xpath = "//a[@tabindex = '-1']")
subset_coauthors <- if (n_coauthors > length(coauthors)) TRUE else seq_len(n_coauthors)
coauthor_href <- xml2::xml_attr(coauthors[subset_coauthors], "href")
coauthors <- xml2::xml_text(coauthors)[subset_coauthors]
# If the person has no coauthors, return empty
if (length(coauthor_href) == 0) {
coauthors <- ""
coauthor_href <- ""
}
data.frame(
author = author_name,
author_href = grab_id(url),
coauthors = coauthors,
coauthors_href = grab_id(coauthor_href)
)
}
all_coauthors <- list_coauthors(url, n_coauthors)
all_coauthors
list_coauthors <- function(url, n_coauthors) {
if (url == "") {
return(
data.frame(author = character(),
author_href = character(),
coauthors = character(),
coauthors_href = character()
)
)
}
resp <- get_resp(url, 5)
google_scholar <- httr::content(resp)
author_name <-
xml2::xml_text(
xml2::xml_find_all(google_scholar,
xpath = "//div[@id = 'gsc_prf_in']")
)
# Do no grab the text of the node yet because I need to grab the
# href below.
coauthors <- xml2::xml_find_all(google_scholar,
xpath = "//a[@tabindex = '-1']")
subset_coauthors <- if (n_coauthors > length(coauthors)) TRUE else seq_len(n_coauthors)
coauthor_href <- xml2::xml_attr(coauthors[subset_coauthors], "href")
coauthors <- xml2::xml_text(coauthors)[subset_coauthors]
# If the person has no coauthors, return empty
if (length(coauthor_href) == 0) {
coauthors <- ""
coauthor_href <- ""
}
data.frame(
author = author_name,
author_href = compose_url(grab_id(url)),
coauthors = coauthors,
coauthors_href = compose_url(grab_id(coauthor_href))
)
}
id <- "amYIKXQAAAAJ"
stopifnot(is.numeric(n_deep), length(n_deep) >= 1, n_deep != 0)
stopifnot(is.numeric(n_coauthors), length(n_coauthors) >= 1, n_coauthors != 0)
url <- compose_url(id)
all_coauthors <- list_coauthors(url, n_coauthors)
all_coauthors
list_coauthors <- function(url, n_coauthors) {
if (url == "") {
return(
data.frame(author = character(),
author_href = character(),
coauthors = character(),
coauthors_href = character()
)
)
}
resp <- get_resp(url, 5)
google_scholar <- httr::content(resp)
author_name <-
xml2::xml_text(
xml2::xml_find_all(google_scholar,
xpath = "//div[@id = 'gsc_prf_in']")
)
# Do no grab the text of the node yet because I need to grab the
# href below.
coauthors <- xml2::xml_find_all(google_scholar,
xpath = "//a[@tabindex = '-1']")
subset_coauthors <- if (n_coauthors > length(coauthors)) TRUE else seq_len(n_coauthors)
coauthor_href <- xml2::xml_attr(coauthors[subset_coauthors], "href")
coauthors <- xml2::xml_text(coauthors)[subset_coauthors]
# If the person has no coauthors, return empty
if (length(coauthor_href) == 0) {
coauthors <- ""
coauthor_href <- ""
}
data.frame(
author = author_name,
author_href = grab_id(url),
coauthors = coauthors,
coauthors_href = grab_id(coauthor_href)
)
}
id <- "amYIKXQAAAAJ"
stopifnot(is.numeric(n_deep), length(n_deep) >= 1, n_deep != 0)
stopifnot(is.numeric(n_coauthors), length(n_coauthors) >= 1, n_coauthors != 0)
url <- compose_url(id)
all_coauthors <- list_coauthors(url, n_coauthors)
all_coauthors
empty_network <- replicate(n_deep, list())
for (i in seq_len(n_deep)) {
if (i == 1)  {
empty_network[[i]] <- clean_network(all_coauthors$coauthors_href, n_coauthors)
} else {
empty_network[[i]] <- clean_network(empty_network[[i - 1]]$coauthors_href, n_coauthors)
}
}
devtools::load_all()
n_deep = 1
n_coauthors = 5
id <- "amYIKXQAAAAJ"
stopifnot(is.numeric(n_deep), length(n_deep) >= 1, n_deep != 0)
stopifnot(is.numeric(n_coauthors), length(n_coauthors) >= 1, n_coauthors != 0)
url <- compose_url(id)
all_coauthors <- list_coauthors(url, n_coauthors)
all_coauthors
empty_network <- replicate(n_deep, list())
for (i in seq_len(n_deep)) {
if (i == 1)  {
empty_network[[i]] <- clean_network(all_coauthors$coauthors_href, n_coauthors)
} else {
empty_network[[i]] <- clean_network(empty_network[[i - 1]]$coauthors_href, n_coauthors)
}
}
