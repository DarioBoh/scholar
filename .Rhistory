coauthors <- ""
coauthor_href <- ""
}
data.frame(
author = author_name,
author_href = grab_id(url),
coauthors = coauthors,
coauthors_href = grab_id(coauthor_href)
)
}
id <- "amYIKXQAAAAJ"
stopifnot(is.numeric(n_deep), length(n_deep) >= 1, n_deep != 0)
stopifnot(is.numeric(n_coauthors), length(n_coauthors) >= 1, n_coauthors != 0)
url <- compose_url(id)
all_coauthors <- list_coauthors(url, n_coauthors)
all_coauthors
empty_network <- replicate(n_deep, list())
for (i in seq_len(n_deep)) {
if (i == 1)  {
empty_network[[i]] <- clean_network(all_coauthors$coauthors_href, n_coauthors)
} else {
empty_network[[i]] <- clean_network(empty_network[[i - 1]]$coauthors_href, n_coauthors)
}
}
devtools::load_all()
n_deep = 1
n_coauthors = 5
id <- "amYIKXQAAAAJ"
stopifnot(is.numeric(n_deep), length(n_deep) >= 1, n_deep != 0)
stopifnot(is.numeric(n_coauthors), length(n_coauthors) >= 1, n_coauthors != 0)
url <- compose_url(id)
all_coauthors <- list_coauthors(url, n_coauthors)
all_coauthors
empty_network <- replicate(n_deep, list())
for (i in seq_len(n_deep)) {
if (i == 1)  {
empty_network[[i]] <- clean_network(all_coauthors$coauthors_href, n_coauthors)
} else {
empty_network[[i]] <- clean_network(empty_network[[i - 1]]$coauthors_href, n_coauthors)
}
}
n_deep = 1
n_coauthors = 5
id <- "amYIKXQAAAAJ"
stopifnot(is.numeric(n_deep), length(n_deep) >= 1, n_deep != 0)
stopifnot(is.numeric(n_coauthors), length(n_coauthors) >= 1, n_coauthors != 0)
url <- compose_url(id)
devtools::load_all()
url <- compose_url(id)
all_coauthors <- list_coauthors(url, n_coauthors)
all_coauthors
id <- "amYIKXQAAAAJ"
stopifnot(is.numeric(n_deep), length(n_deep) >= 1, n_deep != 0)
stopifnot(is.numeric(n_coauthors), length(n_coauthors) >= 1, n_coauthors != 0)
url <- compose_url(id)
all_coauthors <- list_coauthors(url, n_coauthors)
devtools::load_all()
url <- compose_url(id)
all_coauthors <- list_coauthors(url, n_coauthors)
all_coauthors
empty_network <- replicate(n_deep, list())
for (i in seq_len(n_deep)) {
if (i == 1)  {
empty_network[[i]] <- clean_network(all_coauthors$coauthors_href, n_coauthors)
} else {
empty_network[[i]] <- clean_network(empty_network[[i - 1]]$coauthors_href, n_coauthors)
}
}
for (i in seq_len(n_deep)) {
if (i == 1)  {
empty_network[[i]] <- clean_network(all_coauthors$coauthors_href, n_coauthors)
} else {
empty_network[[i]] <- clean_network(empty_network[[i - 1]]$coauthors_href, n_coauthors)
}
}
for (i in seq_len(n_deep)) {
if (i == 1)  {
empty_network[[i]] <- clean_network(all_coauthors$coauthors_href, n_coauthors)
} else {
empty_network[[i]] <- clean_network(empty_network[[i - 1]]$coauthors_href, n_coauthors)
}
}
clean_network <- function(network, n_coauthors) {
browser()
purrr::reduce(
purrr::transpose(
purrr::map(network, purrr::safely(list_coauthors), n_coauth = n_coauthors))$result,
rbind)
}
for (i in seq_len(n_deep)) {
if (i == 1)  {
empty_network[[i]] <- clean_network(all_coauthors$coauthors_href, n_coauthors)
} else {
empty_network[[i]] <- clean_network(empty_network[[i - 1]]$coauthors_href, n_coauthors)
}
}
network
n_coauthors
all_coauthors <- list_coauthors(url, n_coauthors)
empty_network <- replicate(n_deep, list())
all_coauthors
list_coauthors <- function(url, n_coauthors) {
if (url == "") {
return(
data.frame(author = character(),
author_href = character(),
coauthors = character(),
coauthors_url = character()
)
)
}
resp <- get_resp(url, 5)
google_scholar <- httr::content(resp)
author_name <-
xml2::xml_text(
xml2::xml_find_all(google_scholar,
xpath = "//div[@id = 'gsc_prf_in']")
)
# Do no grab the text of the node yet because I need to grab the
# href below.
coauthors <- xml2::xml_find_all(google_scholar,
xpath = "//a[@tabindex = '-1']")
subset_coauthors <- if (n_coauthors > length(coauthors)) TRUE else seq_len(n_coauthors)
coauthor_href <- xml2::xml_attr(coauthors[subset_coauthors], "href")
coauthors <- xml2::xml_text(coauthors)[subset_coauthors]
# If the person has no coauthors, return empty
if (length(coauthor_href) == 0) {
coauthors <- ""
coauthor_href <- ""
}
coauthor_urls <-
vapply(
coauthor_href,
compose_url,
character(1)
)
data.frame(
author = author_name,
author_url = url,
coauthors = coauthors,
coauthors_url = coauthor_urls
)
}
all_coauthors <- list_coauthors(url, n_coauthors)
all_coauthors
all_coauthors$author_url
url <- compose_url(id)
all_coauthors <- list_coauthors(url, n_coauthors)
empty_network <- replicate(n_deep, list())
for (i in seq_len(n_deep)) {
if (i == 1)  {
empty_network[[i]] <- clean_network(all_coauthors$coauthors_url, n_coauthors)
} else {
empty_network[[i]] <- clean_network(empty_network[[i - 1]]$coauthors_url, n_coauthors)
}
}
clean_network <- function(network, n_coauthors) {
purrr::reduce(
purrr::transpose(
purrr::map(network, purrr::safely(list_coauthors), n_coauth = n_coauthors))$result,
rbind)
}
for (i in seq_len(n_deep)) {
if (i == 1)  {
empty_network[[i]] <- clean_network(all_coauthors$coauthors_url, n_coauthors)
} else {
empty_network[[i]] <- clean_network(empty_network[[i - 1]]$coauthors_url, n_coauthors)
}
}
n_deep
empty_network
all_coauthors$coauthors_url
clean_network(all_coauthors$coauthors_url, n_coauthors)
list_coauthors(all_coauthors$coauthors_url[1], n_coauthors)
?data.frame
list_coauthors <- function(url, n_coauthors) {
if (url == "") {
return(
data.frame(author = character(),
author_href = character(),
coauthors = character(),
coauthors_url = character()
)
)
}
resp <- get_resp(url, 5)
google_scholar <- httr::content(resp)
author_name <-
xml2::xml_text(
xml2::xml_find_all(google_scholar,
xpath = "//div[@id = 'gsc_prf_in']")
)
# Do no grab the text of the node yet because I need to grab the
# href below.
coauthors <- xml2::xml_find_all(google_scholar,
xpath = "//a[@tabindex = '-1']")
subset_coauthors <- if (n_coauthors > length(coauthors)) TRUE else seq_len(n_coauthors)
coauthor_href <- xml2::xml_attr(coauthors[subset_coauthors], "href")
coauthors <- xml2::xml_text(coauthors)[subset_coauthors]
# If the person has no coauthors, return empty
if (length(coauthor_href) == 0) {
coauthors <- ""
coauthor_href <- ""
}
coauthor_urls <-
vapply(
coauthor_href,
compose_url,
character(1)
)
data.frame(
author = author_name,
author_url = url,
coauthors = coauthors,
coauthors_url = coauthor_urls,
stringsAsFactors = FALSE
)
}
id <- "amYIKXQAAAAJ"
stopifnot(is.numeric(n_deep), length(n_deep) >= 1, n_deep != 0)
stopifnot(is.numeric(n_coauthors), length(n_coauthors) >= 1, n_coauthors != 0)
url <- compose_url(id)
all_coauthors <- list_coauthors(url, n_coauthors)
empty_network <- replicate(n_deep, list())
clean_network(all_coauthors$coauthors_url, n_coauthors)
list_coauthors(all_coauthors$coauthors_url, n_coauthors)
list_coauthors(all_coauthors$coauthors_url[1], n_coauthors)
all_coauthors$coauthors_url[1]
list_coauthors <- function(url, n_coauthors) {
if (url == "") {
return(
data.frame(author = character(),
author_href = character(),
coauthors = character(),
coauthors_url = character()
)
)
}
resp <- get_resp(url, 5)
google_scholar <- httr::content(resp)
author_name <-
xml2::xml_text(
xml2::xml_find_all(google_scholar,
xpath = "//div[@id = 'gsc_prf_in']")
)
# Do no grab the text of the node yet because I need to grab the
# href below.
coauthors <- xml2::xml_find_all(google_scholar,
xpath = "//a[@tabindex = '-1']")
subset_coauthors <- if (n_coauthors > length(coauthors)) TRUE else seq_len(n_coauthors)
coauthor_href <- xml2::xml_attr(coauthors[subset_coauthors], "href")
coauthors <- xml2::xml_text(coauthors)[subset_coauthors]
# If the person has no coauthors, return empty
if (length(coauthor_href) == 0) {
coauthors <- ""
coauthor_href <- ""
}
coauthor_urls <-
vapply(
grab_id(coauthor_href),
compose_url,
character(1)
)
data.frame(
author = author_name,
author_url = url,
coauthors = coauthors,
coauthors_url = coauthor_urls,
stringsAsFactors = FALSE
)
}
id <- "amYIKXQAAAAJ"
stopifnot(is.numeric(n_deep), length(n_deep) >= 1, n_deep != 0)
stopifnot(is.numeric(n_coauthors), length(n_coauthors) >= 1, n_coauthors != 0)
url <- compose_url(id)
all_coauthors <- list_coauthors(url, n_coauthors)
all_coauthors$coauthors_url[1]
all_coauthors$coauthors_url[2]
all_coauthors$coauthors_url[3]
empty_network <- replicate(n_deep, list())
clean_network(all_coauthors$coauthors_url, n_coauthors)
for (i in seq_len(n_deep)) {
if (i == 1)  {
empty_network[[i]] <- clean_network(all_coauthors$coauthors_url, n_coauthors)
} else {
empty_network[[i]] <- clean_network(empty_network[[i - 1]]$coauthors_url, n_coauthors)
}
}
final_network <- rbind(all_coauthors, Reduce(rbind, empty_network))
final_network
final_network[c("author", "coauthor")]
final_network[c("author", "coauthors")]
all_coauthors
list_coauthors <- function(url, n_coauthors) {
if (url == "") {
return(
data.frame(author = character(),
author_href = character(),
coauthors = character(),
coauthors_url = character()
)
)
}
resp <- get_resp(url, 5)
google_scholar <- httr::content(resp)
author_name <-
xml2::xml_text(
xml2::xml_find_all(google_scholar,
xpath = "//div[@id = 'gsc_prf_in']")
)
# Do no grab the text of the node yet because I need to grab the
# href below.
coauthors <- xml2::xml_find_all(google_scholar,
xpath = "//a[@tabindex = '-1']")
subset_coauthors <- if (n_coauthors > length(coauthors)) TRUE else seq_len(n_coauthors)
coauthor_href <- xml2::xml_attr(coauthors[subset_coauthors], "href")
coauthors <- xml2::xml_text(coauthors)[subset_coauthors]
# If the person has no coauthors, return empty
if (length(coauthor_href) == 0) {
coauthors <- ""
coauthor_href <- ""
}
coauthor_urls <-
vapply(
grab_id(coauthor_href),
compose_url,
character(1)
)
data.frame(
author = author_name,
author_url = url,
coauthors = coauthors,
coauthors_url = coauthor_urls,
stringsAsFactors = FALSE,
row.names = NULL
)
}
id <- "amYIKXQAAAAJ"
list_coauthors <- function(id, n_coauthors) {
url <- compose_url(id)
if (url == "") {
return(
data.frame(author = character(),
author_href = character(),
coauthors = character(),
coauthors_url = character()
)
)
}
resp <- get_resp(url, 5)
google_scholar <- httr::content(resp)
author_name <-
xml2::xml_text(
xml2::xml_find_all(google_scholar,
xpath = "//div[@id = 'gsc_prf_in']")
)
# Do no grab the text of the node yet because I need to grab the
# href below.
coauthors <- xml2::xml_find_all(google_scholar,
xpath = "//a[@tabindex = '-1']")
subset_coauthors <- if (n_coauthors > length(coauthors)) TRUE else seq_len(n_coauthors)
coauthor_href <- xml2::xml_attr(coauthors[subset_coauthors], "href")
coauthors <- xml2::xml_text(coauthors)[subset_coauthors]
# If the person has no coauthors, return empty
if (length(coauthor_href) == 0) {
coauthors <- ""
coauthor_href <- ""
}
coauthor_urls <-
vapply(
grab_id(coauthor_href),
compose_url,
character(1)
)
data.frame(
author = author_name,
author_url = url,
coauthors = coauthors,
coauthors_url = coauthor_urls,
stringsAsFactors = FALSE,
row.names = NULL
)
}
devtools::load_all(".")
id <- "amYIKXQAAAAJ"
stopifnot(is.numeric(n_deep), length(n_deep) >= 1, n_deep != 0)
stopifnot(is.numeric(n_coauthors), length(n_coauthors) >= 1, n_coauthors != 0)
all_coauthors <- list_coauthors(id, n_coauthors)
empty_network <- replicate(n_deep, list())
for (i in seq_len(n_deep)) {
if (i == 1)  {
empty_network[[i]] <- clean_network(all_coauthors$coauthors_url, n_coauthors)
} else {
empty_network[[i]] <- clean_network(empty_network[[i - 1]]$coauthors_url, n_coauthors)
}
}
final_network <- rbind(all_coauthors, Reduce(rbind, empty_network))
final_network[c("author", "coauthors")]
devtools::load_all(".")
devtools::load_all(".")
library(scholar)
coauthor_network <- get_coauthors('amYIKXQAAAAJ&hl')
coauthor_network
#' @return a \code{ggplot2} object but prints a plot as a side effect.
#' @export
#'
#' @examples
#'
#' \dontrun{
#' library(scholar)
#' coauthor_network <- get_coauthors('amYIKXQAAAAJ&hl')
#' plot_coauthors(coauthor_network)
#' }
plot_coauthors <- function(network, size_labels = 5) {
graph <- tidygraph::as_tbl_graph(network)
graph$closeness <- suppressWarnings(tidygraph::centrality_closeness())
ggraph::ggraph(graph, layout = 'kk') +
ggraph::geom_edge_link(ggplot2::aes_string(alpha = '..index..', color = as.character('from')), alpha = 1/3, show.legend = FALSE) +
ggraph::geom_node_point(ggplot2::aes_string(size = 'closeness'), alpha = 1/2, show.legend = FALSE) +
ggraph::geom_node_text(ggplot2::aes_string(label = 'name'), size = size_labels, repel = TRUE, check_overlap = TRUE) +
ggplot2::labs(title = paste0("Network of coauthorship of", network$author[1])) +
ggraph::theme_graph(title_size = 16)
}
devtools::load_all(".")
library(scholar)
coauthor_network <- get_coauthors('amYIKXQAAAAJ&hl')
plot_coauthors(coauthor_network)
tidygraph::centrality_closeness
?tidygraph::centrality_closeness
#' @return a \code{ggplot2} object but prints a plot as a side effect.
#' @export
#'
#' @examples
#'
#' \dontrun{
#' library(scholar)
#' coauthor_network <- get_coauthors('amYIKXQAAAAJ&hl')
#' plot_coauthors(coauthor_network)
#' }
plot_coauthors <- function(network, size_labels = 5) {
graph <- tidygraph::as_tbl_graph(network) %>%
mutate(closeness = suppressWarnings(tidygraph::centrality_closeness()))
ggraph::ggraph(graph, layout = 'kk') +
ggraph::geom_edge_link(ggplot2::aes_string(alpha = '..index..', color = as.character('from')), alpha = 1/3, show.legend = FALSE) +
ggraph::geom_node_point(ggplot2::aes_string(size = 'closeness'), alpha = 1/2, show.legend = FALSE) +
ggraph::geom_node_text(ggplot2::aes_string(label = 'name'), size = size_labels, repel = TRUE, check_overlap = TRUE) +
ggplot2::labs(title = paste0("Network of coauthorship of", network$author[1])) +
ggraph::theme_graph(title_size = 16)
}
devtools::load_all(".")
plot_coauthors(coauthor_network)
devtools::load_all(".")
devtools::load_all(".")
plot_coauthors(coauthor_network)
library(dplyr)
plot_coauthors(coauthor_network)
usethis::use_package("tidygraph")
usethis::use_package("ggraph")
usethis::use_package("ggplot2")
devtools::check()
coauthor_network <- get_coauthors('amYIKXQAAAAJ&hl', 'amYIKXQAAAAJ&hl')
coauthor_network <- get_coauthors(c('amYIKXQAAAAJ&hl', 'amYIKXQAAAAJ&hl'))
coauthor_network
get_coauthors(c('amYIKXQAAAAJ&hl', 'amYIKXQAAAAJ&hl'))
tidy_id(c('amYIKXQAAAAJ&hl', 'amYIKXQAAAAJ&hl'))
tidy_id(c('amYIKXQAAAAJ&hl', 'amYIKXQAAAAJsawa'))
get_coauthors(c('amYIKXQAAAAJ&hl', 'amYIKXQAAAAJ&sada'))
devtools::load_all(".")
get_coauthors(c('amYIKXQAAAAJ&hl', 'amYIKXQAAAAJ&sada'))
devtools::load_all(".")
get_coauthors(c('amYIKXQAAAAJ&hl', 'amYIKXQAAAAJ&sada'))
devtools::load_all(".")
devtools::load_all(".")
coauthor_network <- get_coauthors('amYIKXQAAAAJ&hl')
coauthor_network
plot_coauthors(coauthor_network)
devtools::install()
reprex::reprex({library(scholar)
coauthor_network <- get_coauthors('amYIKXQAAAAJ&hl')
plot_coauthors(coauthor_network)})
reprex::reprex({library(scholar)
coauthor_network <- get_coauthors('amYIKXQAAAAJ&hl')
head(coauthor_network, 15)
plot_coauthors(coauthor_network)})
reprex::reprex({library(scholar)
coauthor_network <- get_coauthors('amYIKXQAAAAJ&hl')
head(coauthor_network, 15)
supressWarnings(plot_coauthors(coauthor_network))})
reprex::reprex({library(scholar)
coauthor_network <- get_coauthors('amYIKXQAAAAJ&hl')
head(coauthor_network, 15)
suppressWarnings(plot_coauthors(coauthor_network, 3))})
reprex::reprex({library(scholar)
coauthor_network <- get_coauthors('amYIKXQAAAAJ&hl')
head(coauthor_network, 15)
suppressPackageStartupMessages(plot_coauthors(coauthor_network, 3))})
reprex::reprex({library(scholar)
coauthor_network <- get_coauthors('amYIKXQAAAAJ&hl')
head(coauthor_network, 15)
plot_coauthors(coauthor_network, 3)})
reprex::reprex({library(scholar)
coauthor_network <- get_coauthors('amYIKXQAAAAJ&hl')
head(coauthor_network, 15)
plot_coauthors(coauthor_network, 3)})
devtools::load_all(".")
?get_coauthors
devtools::document()
?get_coauthors
devtools::check()
devtools::install()
?scholar::get_coauthors
devtools::document()
